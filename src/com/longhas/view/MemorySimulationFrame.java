/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MemorySimulationFrame.java
 * Author : LONGHAS, MARK RYAN M.
 * Created on Oct 3, 2010, 10:33:35 PM
 */

package com.longhas.view;

import java.util.ArrayList;
import com.longhas.data.Process;
import com.longhas.services.ColorRenderer;
import javax.swing.table.DefaultTableModel;
import com.longhas.services.LookAndFeelModel;
import com.longhas.services.RunnableObject;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import javax.swing.table.TableColumn;

/**
 *
 * @author YANIX_MRML
 */
public class MemorySimulationFrame extends javax.swing.JFrame {

    /** Creates new form MemorySimulationFrame */
    private ArrayList<Process> processList;
    private DefaultTableModel tableModel;
    private int memorySize;
    private Lock lockObject = new ReentrantLock( true );
    private ExecutorService runner;
    private RunnableObject object;
    private boolean isStart = true;
    private boolean isPause = false;
    private boolean isToggle = false;
    private boolean isRenew = false;

    public MemorySimulationFrame() {
        LookAndFeelModel.setLookAndFeelModel();
        initComponents();
        processList = new ArrayList<Process>();
        tableModel = (DefaultTableModel) processTable.getModel();
        TableColumn colorColumn = memoryTable.getColumnModel().getColumn(2);
        colorColumn.setCellRenderer(new ColorRenderer(true));
        memorySize = 0;
        runner = Executors.newFixedThreadPool( 1 );
        initializeRunnableObject();
        runner.execute(object);
        runner.shutdown();
    }

    private void initializeRunnableObject(){
        object = new RunnableObject(lockObject,textSimulation,jScrollPane1,"",processTable);
        object.setPercentageDisplayProperties(memoryPercentagePanel, memoryPercentageLabel);
        object.setMemoryTableModel((DefaultTableModel) memoryTable.getModel());
        object.setGraphProcessPanel(graphPanel);
        object.setProcessTableProperties(processTable);
        object.setInputItem(inputMenuItem,inputButton);
        object.setMenuRestartItem(restartMenu);
        object.setMenuButtonStartItem(startMenu,startButton);
        object.setMemoryPanel(memoryPanel);
        object.setProgressDisplay(progressBar, progressLabel);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        memoryPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textSimulation = new javax.swing.JTextArea();
        memoryPercentagePanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        inputButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        memoryPercentageLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        processTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        memoryTable = new javax.swing.JTable();
        graphPanel = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        progressLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        startMenu = new javax.swing.JMenuItem();
        restartMenu = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        inputMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Memory Manager Simulation");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        memoryPanel.setBackground(java.awt.Color.GRAY);

        javax.swing.GroupLayout memoryPanelLayout = new javax.swing.GroupLayout(memoryPanel);
        memoryPanel.setLayout(memoryPanelLayout);
        memoryPanelLayout.setHorizontalGroup(
            memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
        );
        memoryPanelLayout.setVerticalGroup(
            memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 552, Short.MAX_VALUE)
        );

        textSimulation.setBackground(new java.awt.Color(0, 0, 0));
        textSimulation.setColumns(20);
        textSimulation.setEditable(false);
        textSimulation.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        textSimulation.setForeground(new java.awt.Color(255, 255, 255));
        textSimulation.setRows(5);
        jScrollPane1.setViewportView(textSimulation);

        memoryPercentagePanel.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout memoryPercentagePanelLayout = new javax.swing.GroupLayout(memoryPercentagePanel);
        memoryPercentagePanel.setLayout(memoryPercentagePanelLayout);
        memoryPercentagePanelLayout.setHorizontalGroup(
            memoryPercentagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 141, Short.MAX_VALUE)
        );
        memoryPercentagePanelLayout.setVerticalGroup(
            memoryPercentagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 514, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(0, 0, 102));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setOpaque(false);

        inputButton.setBackground(new java.awt.Color(255, 255, 255));
        inputButton.setFont(new java.awt.Font("Calibri", 1, 14));
        inputButton.setForeground(new java.awt.Color(255, 255, 255));
        inputButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/longhas/resources/83.png"))); // NOI18N
        inputButton.setText("Manage Input");
        inputButton.setFocusable(false);
        inputButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        inputButton.setOpaque(false);
        inputButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        inputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(inputButton);

        startButton.setBackground(new java.awt.Color(255, 255, 255));
        startButton.setFont(new java.awt.Font("Calibri", 1, 14));
        startButton.setForeground(new java.awt.Color(255, 255, 255));
        startButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/longhas/resources/next_f2.png"))); // NOI18N
        startButton.setText("Start Simulation");
        startButton.setEnabled(false);
        startButton.setFocusable(false);
        startButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        startButton.setOpaque(false);
        startButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(startButton);

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Calibri", 1, 14));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/longhas/resources/01.png"))); // NOI18N
        jButton3.setText("Exit");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton3.setOpaque(false);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jPanel4.add(jToolBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 306, 53));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 18));
        jLabel1.setForeground(new java.awt.Color(102, 153, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/longhas/resources/monitor_16.png"))); // NOI18N
        jLabel1.setText("MEMORY MANAGEMENT SIMULATION");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 330, 31));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/longhas/resources/banner.jpg"))); // NOI18N
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 0, 750, 50));

        memoryPercentageLabel.setFont(new java.awt.Font("Calibri", 1, 14));
        memoryPercentageLabel.setText("MEMORY USAGE : 0%");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Process Table", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N
        jPanel2.setOpaque(false);

        processTable.setFont(new java.awt.Font("Calibri", 0, 12));
        processTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Process", "Size", "State"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        processTable.getTableHeader().setFont(new java.awt.Font("Calibri",java.awt.Font.BOLD,14));
        jScrollPane2.setViewportView(processTable);
        processTable.getColumnModel().getColumn(0).setResizable(false);
        processTable.getColumnModel().getColumn(1).setResizable(false);
        processTable.getColumnModel().getColumn(2).setResizable(false);
        processTable.getColumnModel().getColumn(3).setResizable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Memory Table", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N

        memoryTable.setFont(new java.awt.Font("Calibri", 0, 12));
        memoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Size", "Color"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        memoryTable.getTableHeader().setFont(new java.awt.Font("Calibri",java.awt.Font.BOLD,14));
        jScrollPane3.setViewportView(memoryTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        graphPanel.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 265, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(0, 0, 102));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 18));
        jLabel4.setForeground(new java.awt.Color(102, 153, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/longhas/resources/monitor_16.png"))); // NOI18N
        jLabel4.setText("MEMORY MANAGEMENTSIMULATION");
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 0, 330, 31));
        jPanel5.add(progressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 10, 390, 10));

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 14));
        jLabel5.setForeground(new java.awt.Color(102, 153, 255));
        jLabel5.setText("Created by Mark Ryan M. Longhas");
        jPanel5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 30, 230, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/longhas/resources/banner2.jpg"))); // NOI18N
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        progressLabel.setFont(new java.awt.Font("Calibri", 1, 12));
        progressLabel.setForeground(new java.awt.Color(255, 255, 255));
        progressLabel.setText("Running Memory Manager ...");
        jPanel5.add(progressLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 20, 390, 20));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(memoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(graphPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(memoryPercentagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(memoryPercentageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 1260, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(memoryPercentagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(memoryPercentageLabel))
                    .addComponent(memoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel3, 0, 281, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1260, 670));

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));

        jMenu1.setBackground(new java.awt.Color(255, 255, 255));
        jMenu1.setText("File");

        startMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SPACE, 0));
        startMenu.setBackground(new java.awt.Color(255, 255, 255));
        startMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/longhas/resources/next_f2.png"))); // NOI18N
        startMenu.setText("Start Simulation");
        startMenu.setEnabled(false);
        startMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startMenuActionPerformed(evt);
            }
        });
        jMenu1.add(startMenu);

        restartMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        restartMenu.setBackground(new java.awt.Color(255, 255, 255));
        restartMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/longhas/resources/26.png"))); // NOI18N
        restartMenu.setText("Restart Simulation");
        restartMenu.setEnabled(false);
        restartMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartMenuActionPerformed(evt);
            }
        });
        jMenu1.add(restartMenu);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/longhas/resources/01.png"))); // NOI18N
        jMenuItem4.setText("Exit");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setBackground(new java.awt.Color(255, 255, 255));
        jMenu2.setText("Edit");

        inputMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        inputMenuItem.setBackground(new java.awt.Color(255, 255, 255));
        inputMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/longhas/resources/83.png"))); // NOI18N
        inputMenuItem.setText("Manage Input");
        inputMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(inputMenuItem);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputMenuItemActionPerformed
        // TODO add your handling code here:
        manageInput();
    }//GEN-LAST:event_inputMenuItemActionPerformed

    private void startMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startMenuActionPerformed
        // TODO add your handling code here:

        startSimulation();
        
    }//GEN-LAST:event_startMenuActionPerformed

    private void manageInput(){

        if(!isToggle){
            object.toggle();
            isToggle = true;
        }


        ManageInput manageInput = new ManageInput(this,true,processList,memorySize);
        manageInput.setVisible(true);
        processList = manageInput.getProcessList();
        memorySize = manageInput.getMemorySize();
        isRenew = manageInput.isIsRenew();
        displayProcessTable();
        
        if(processList.size()>0){

            object.initializeProcess(processList, memorySize);

            startMenu.setEnabled(true);
            startButton.setEnabled(true);
            restartMenu.setEnabled(false);
            
        }else{

            clearProcessTable();

        }

        isStart = true;
        isPause = false;

    }

    private void startSimulation(){

        if(processList.size()>0){

            inputMenuItem.setEnabled(false);
            inputButton.setEnabled(false);
            restartMenu.setEnabled(false);
            isToggle = false;
            if(!isRenew){

                if(isStart && !isPause){
                    startMenu.setText("Pause Simulation");
                    startButton.setText("Pause Simulation");
                    isStart = false;
                    isPause = true;
                }else{
                    startMenu.setText("Start Simulation");
                    startButton.setText("Start Simulation");
                    object.setChecker(false);
                    isStart = true;
                    isPause = false;
                }

            }else{

                object.setNumberOfProcessFinished(0);
                object.setNumberOfProcessFinished(0);
                object.setChecker(false);
                startMenu.setText("Pause Simulation");
                startButton.setText("Pause Simulation");
                isStart = false;
                isPause = true;
                isRenew = false;

            }

            object.setChecker(false);
            object.toggle();

        }

    }



    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        System.exit(1);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:

        startSimulation();
        
    }//GEN-LAST:event_startButtonActionPerformed

    private void inputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputButtonActionPerformed
        // TODO add your handling code here:
        manageInput();
    }//GEN-LAST:event_inputButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        System.exit(1);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void restartMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartMenuActionPerformed
        // TODO add your handling code here:

           object.toggle();
           for(int i=0;i<processList.size();i++){

               Process process = processList.get(i);
               process.setState("New");
               processList.set(i, process);
           }

           displayProcessTable();
           //
           object.setNumberOfProcessFinished(0);
           object.setChecker(false);
           object.initializeProcess(processList, memorySize);
           
           startMenu.setEnabled(true);
           startButton.setEnabled(true);
           restartMenu.setEnabled(false);
           isStart = true;
           isPause = false;
           startMenuActionPerformed(evt);

    }//GEN-LAST:event_restartMenuActionPerformed


    private void clearProcessTable(){
        for(int i=tableModel.getRowCount()-1;i>=0;i--){
            tableModel.removeRow(i);
        }
   }

    private void displayProcessTable(){

        clearProcessTable();

        for(Process process : processList){
            tableModel.addRow(new Object[]{process.getId(),process.getProcessName(),process.getMemorySize(),process.getState()});
        }


    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MemorySimulationFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel graphPanel;
    private javax.swing.JButton inputButton;
    private javax.swing.JMenuItem inputMenuItem;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel memoryPanel;
    private javax.swing.JLabel memoryPercentageLabel;
    private javax.swing.JPanel memoryPercentagePanel;
    private javax.swing.JTable memoryTable;
    private javax.swing.JTable processTable;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel progressLabel;
    private javax.swing.JMenuItem restartMenu;
    private javax.swing.JButton startButton;
    private javax.swing.JMenuItem startMenu;
    private javax.swing.JTextArea textSimulation;
    // End of variables declaration//GEN-END:variables

}
